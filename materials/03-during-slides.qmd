---
title: "During analysis"
subtitle: "Data/coding practices and tools"
author: "Carlos Granell"
format: 
  revealjs:
    slide-number: true
    show-slide-number: all
    progress: true
    logo: ../images/ESCOLA-DOCTORAT-es-blanco.png
    footer: "[cgranell.github.io/rrp](https://cgranell.github.io/rrp)"
    theme: default
    transition: fade
    preview-links: true
    author-meta: "Carlos Granell"
    date-meta: "15/03/2024"
    chalkboard: 
      theme: whiteboard
      buttons: false
      boardmarker-width: 3
from: markdown+emoji
execute:
  echo: true
---

# \[#11\] Open data != reproducible data {#rec11 .center .r-fit-text}

## Open != reproducible

> “Openness and Open Science (data sharing, code sharing, open access, etc.) are enablers of reproducibility, but do not necessarily guarantee it” [@chiarelli2021]

::: incremental
-   Open != Good (of high academic quality)

-   Reproducible != Good (of high academic quality)

-   Open != reproducible
:::

::: notes
Source: [Becoming a better scientist with open and reproducible research (2)](https://lgatto.github.io/open-and-rr-2/)
:::

# \[#12\] Data (required) for reproducibility {#rec02 .center .r-fit-text}

## Data for reproducibility

### If datasets are valuable contributions by themselves [@noy2023]

::: {.fragment .fade-in}
Go to [Recomendation #13](#rec13)
:::

## Data for reproducibility {data-menu-title="Data for reproducibility (II)"}

### If datasets are meaningless outside of the accompanying article [@noy2023]

::: incremental
-   Reproducibility means **access** to the required datasets to recreate the reported results

-   Access does not necessarily imply that datasets are open or citable or discoverable by themselves

-   **Suggestion**: Deposit reproducibility package (data, code, docs) on Zenodo or similar rather than supplementary material tied to the paper\]

    -   Hint: [connecting GitHub with Zenodo](https://genr.eu/wp/cite/)
:::

## Data for reproducibility: Example

[Using mobile devices as scientific measurement instruments: Reliable android task scheduling](https://doi.org/10.1016/j.pmcj.2022.101550) {{< fa solid file-pdf >}}

```{mermaid}
%%| echo: false

flowchart LR; 
  I1(Analysis Notebook <br> code + data) -- ref 26 --> Z2[Reproducibility Package archived on Zenodo <br> 'Universitat Jaume I Research Data' Community]
  click Z2 "https://zenodo.org/records/5032028"
  I1 == input ==> A((PAPER in PDF))
  click A "https://doi.org/10.1016/j.pmcj.2022.101550"
  A == output: software ==> O1(NTD Software)
  A == output ==> O2(Fig 4)
  A == output ==> O3(Fig 5)
  A == output ==> O4(Other figs)
  O1 -- ref 21 --> Z1[NTD Software archived on Zenodo]
  O2 -- ref 26 --> Z2
  click O2 "https://ars.els-cdn.com/content/image/1-s2.0-S1574119222000074-gr4_lrg.jpg"
  O3 -- ref 26 --> Z2
  click O3 "https://ars.els-cdn.com/content/image/1-s2.0-S1574119222000074-gr5_lrg.jpg"
  Z1 -- links to --> G1[Github Repo]
  click Z1 "https://zenodo.org/records/6477770"
  click G1 "https://github.com/GeoTecINIT/nativescript-task-dispatcher"
  Z2 -- links to --> G2[Github Repo]
  click G2 "https://github.com/GeoTecINIT/nativescript-journalpaper"
```

::: notes
Source: [Mermaid cheatsheet](https://jojozhuang.github.io/tutorial/mermaid-cheat-sheet/)
:::

# \[#13\] Be (data) FAIR, my friend {#rec13 .center .r-fit-text}

## (Data) FAIR

::: columns
::: {.column width="40%" align="center"}
<img src="../images/phdcomics1531.gif" width="90%"/>
:::

::: {.column width="60%"}
::: incremental
-   File names are **machine-readable**, **human-readable**, and play well with **default ordering**

-   Script file names begin with numbers/letters to indicate the sequence in the analysis: `01_download_data.R`

-   Data file names begin with dates (YYYYMMDD) as prefix: `20200115_survey.csv`
:::
:::
:::

::: notes
Source: [phdcomics.com](http://phdcomics.com/comics/archive.php?comicid=1531)
:::

# \[#4\] Never ever touch raw data {#rec04}

Remember [Newton's letter to Flamsteed](https://cgranell.github.io/rrp-uji/slides/slides11_01.html#newton)

## Raw data

::: incremental
-   Store raw data permanently (`data-raw` folder)

-   Use scripts to process/clean raw datasets

-   Store processed data in a separate folder (`data` or `data-clean` folder)

-   Document the process (simple steps, diagrams, content/structure of datasets, provenance) in a plain text README file (See [Before Recommendation #6](#rec01))
:::

# \[#5\] Use open data formats {#rec05}

## Open formats

::: incremental
-   Use open, text-based formats whenever possible

-   Independent of specific software tools or vendors

-   Alternatively, provide data in an open format besides proprietary format

    -   Microsoft Excel (`.xls`) + Comma-separated values (`.csv`)

    -   ESRI Shapefile (`.shp`) + GeoPackages (`.gpkg`)
:::

::: {.fragment .fade-in}
::: callout-note
## **Example**

Dutch national centre of expertise and repository for research data (DANS) - [Preferred vs non-preferred formats](https://dans.knaw.nl/en/file-formats/)
:::
:::

# \[#6\] Document, document, and document {#rec06 .center .r-fit-text}

## README file(s)

::: incremental
-   Include a **README file** in the `root` folder to describe the project, provide basic orientation to use your code, data, etc.

::: {.fragment .fade-in}
::: callout-tip
## **Tips**

Suggestions for writing a good [README](https://www.makeareadme.com/) and [GitHub's README](https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-readmes)

If your project is on GitHub, README files will be automatically visualised if written in [Markdown](https://www.markdownguide.org/)
:::
:::
:::

## README file(s) {data-menu-title="README file(s) (II)"}

::: incremental
-   Include (if required) **README files** in each subfolder to describe metadata/complex content

-   Keep track of ideas, discussions and decisions about the project (in the `notes` folder)

-   Use simple formatting language/tool for writing plain text files that can be version controlled
:::

# \[#7\] Add a data license {#rec07 .center .r-fit-text}

## Concept of license

### A license is a *contract* between the *authors* and *users* [@jolly2012]

::: {.fragment .fade-in-then-semi-out}
Without a license, **copyright** is automatically attached to your work
:::

::: {.fragment .fade-in}
If you plan to make your work (data/databases/documents) public, **always specify a [license](https://the-turing-way.netlify.app/reproducible-research/licensing/licensing-data.html)** via a *LICENSE file* (`LICENSE.md` or `LICENSE.txt`)
:::

## Data licenses: Creative Commons

::: columns
::: {.column width="5%" align="center"}
:::

::: {.column width="65%" align="center"}
[**CC BY-SA-NC-ND**](https://creativecommons.org/about/cclicenses/)

|        |                                                            |
|--------|------------------------------------------------------------|
| **BY** | Creators/authors must be credited                          |
| **SA** | Derivatives or redistributions must have identical license |
| **NC** | Only non-commercial users are allowed                      |
| **ND** | No derivatives are allowed                                 |
:::

::: {.column width="30%" align="center"}
::: {.fragment .fade-in}
![](https://cent.uji.es/pub/guia-lpi-docencia/cc-icn-by.png){width="112px" title="CC Attribution"} <br/>
:::

::: {.fragment .fade-in}
![](https://cent.uji.es/pub/guia-lpi-docencia/cc-icn-by-nc.png){width="112px" title="CC Attribution-NonCommercial"} <br/>
:::

::: {.fragment .fade-in}
![](https://cent.uji.es/pub/guia-lpi-docencia/cc-icn-by-nd.png){width="112px" title="CC Attribution-NoDerivates"} <br/>
:::

::: {.fragment .fade-in}
![](https://cent.uji.es/pub/guia-lpi-docencia/cc-icn-by-nd.png){width="112px" title="CC AttributionShareAlike"} <br/>
:::

::: {.fragment .fade-in}
![](https://cent.uji.es/pub/guia-lpi-docencia/cc-icn-by-nc-sa.png){width="112px" title="CC Attribution-NonCommercial-ShareAlike"} <br/>
:::

::: {.fragment .fade-in}
![](https://cent.uji.es/pub/guia-lpi-docencia/cc-icn-by-nc-nd.png){width="112px" title="CC Attribution-NonCommercial-NoDerivates"} <br/>
:::
:::
:::

## Data licenses: Creative Commons {.smaller data-menu-title="Data licenses: CC example"}

### Ex: Article (or data/datasets) to be published

| As user/viewer, can you                  | CC BY 4.0 | CC BY-NC-ND                                     |
|------------------------------|------------------|------------------------|
| Read, print and download it?             | YES       | YES                                             |
| Redistribute or republish it?            | YES       | YES                                             |
| Translate it?                            | YES       | YES (private use only and not for distribution) |
| Download for text and data mining?       | YES       | YES                                             |
| Reuse portions of it in other works [^1] | YES       | YES                                             |
| Sell or re-use it for commercial purpose | YES       | NO                                              |

[^1]: Use with caution!

## Data licenses: CC Zero

::: columns
::: {.column width="5%" align="center"}
:::

::: {.column width="35%" align="center"}
[**CC0 “No Rights Reserved"**](https://creativecommons.org/public-domain/cc0/)
:::

::: {.column width="60%" align="center"}
Creators/researchers/educators put their works into the global public domain for the benefit of society
:::
:::

## Data licenses: Open Data Commons

::: columns
::: {.column width="5%" align="center"}
:::

::: {.column width="35%" align="center"}
[**Open Data Commons**](https://opendatacommons.org/licenses/index.html) [^2]
:::

::: {.column width="60%" align="center"}
::: {.fragment .fade-in}
[ODC Public Domain Dedication and License (PDDL)](https://opendatacommons.org/licenses/pddl/): Public Domain for data/databases (≅CC0)
:::

::: {.fragment .fade-in}
[ODC-By](https://opendatacommons.org/licenses/by/): Attribution for data/databases (≅CC-BY)
:::

::: {.fragment .fade-in}
[ODC Open Data License (ODbL)](https://opendatacommons.org/licenses/odbl/): Attribution Share-Alike for data/databases
:::
:::
:::

[^2]: [Differences between CC and ODC licenses](https://the-turing-way.netlify.app/reproducible-research/licensing/licensing-data.html#a-note-on-the-differences-between-cc-and-odc-licenses)

## Data licenses: What UJI recommends

### [Copyright and licences](https://www.uji.es/serveis/cd/bib/pco/base/drets2/)

# \[#8\] Add a software license {#rec08 .center .r-fit-text}

## Software licenses

### Always add a [license](https://the-turing-way.netlify.app/reproducible-research/licensing/licensing-software.html) to the software you plan to make public

::: columns
::: {.column width="50%" align="center"}
**Permissive** = attribution (recommended for academic work)
:::

::: {.column width="50%" align="center"}
**Copyleft** = share-alike (derivative work maintain same license as the original)
:::
:::

##  {data-menu-title="Software licenses (II)"}

![](https://journals.plos.org/ploscompbiol/article/file?id=10.1371/journal.pcbi.1002598.g002&type=large){width="65%" fig-align="center"}

::: aside
Source: [@morin2012]
:::

## Software licenses: What UJI recommends

### Nothing

# \[#9\] Learn/use version control systems {#rec09 .center .r-fit-text}

## Version control systems

### Turn your local project folder into a version control repository

::: incremental
-   to keep track changes of your work over time

-   to roll back to past edits (track history)

-   to handle properly text formats (code, text docs, markdown docs) as opposed to rich/binary formats (Word, gif/jpg)

-   **Tools:** [Git](https://git-scm.com/), SVN, Mercurial

-   **Readings**: [Getting started with git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git), [An introduction to Git: what it is, and how to use it](https://www.freecodecamp.org/news/what-is-git-and-how-to-use-it-c341b049ae61/), [@perez2016], [@bryan2018]
:::

::::

# \[#10\] Learn/use online (Git) repository hosting services {#rec10 .center .r-fit-text}

## Online (Git) repository hosting services

### Easier for individuals and teams to use Git for version control and collaboration

::: incremental
-   VCS + collaborative features + development support features

-   **Tools**: [GitLab](https://about.gitlab.com/), [Bitbucket](https://bitbucket.org/), [GitHub](https://github.com/)

-   **Readings**:

    -   [Cookiecutter Data Science: Best practices for organising your repository for easy version control](https://drivendata.github.io/cookiecutter-data-science/)

    -   [@perez2016], [@bryan2020]
:::

## References
