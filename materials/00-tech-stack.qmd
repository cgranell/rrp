---
title: "Tech stack"
---

This course teaches best practices and recommendations for getting started with computational reproducibility to PhD students and research staff from diverse backgrounds with no background, in principle, in computational skills.


While the recommended technology stack for computational reproducibility is extensive, course participants can follow it without any tool. However, to put them in practice later, participants are encouraged to familiarize themselves with some key technologies:


This course teaches best practices and recommendations for getting started with computational reproducibility to PhD students and research staff from diverse backgrounds without, in principle, prior programming experience and computational skills.

While the set of recommended technologies for computational reproducibility is extensive and active, course participants can follow this course without using any specific tool. However, to put practices and recommendations into practice, participants are encouraged to familiarize themselves with some key technologies:

-   **Markdown:**


### Technology stack

The following list is an ongoing effort to compile recent and mature technology to support any facet of reproducibility research.

-   **Git:**

-   **Github:** Using [GitHub](https://github.com/) also goes a long way in helping participants visualize and understand the Git process, which also helps them engage. The tool allows participant to view diffs (file changes over time) in the files they collaborate on, track commit histories, and search the current state and the entire history of the code base.

